#
# Copyright 2019-2020 DJANTA, LLC (https://www.djanta.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed toMap in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build

# On push event ...
on:
  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [debian, ubuntu, rhel7]
#        fail-fast: false
#    if: github.event_name == 'push' && startsWith(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    steps:
#      - name: Check Commit Type
#        uses: gsactions/commit-message-checker@v1
#        with:
#          pattern: '\[[^]]+\] .+$'
#          flags: 'gm'
#          error: 'Your first line has to contain a commit type like "[BUGFIX]".'
#      - name: Check Line Length
#        uses: gsactions/commit-message-checker@v1
#        with:
#          pattern: '^[^#].{74}'
#          error: 'The maximum line length of 74 characters is exceeded.'
#      - name: Check for Resolves / Fixes
#        uses: gsactions/commit-message-checker@v1
#        with:
#          pattern: '^.+(Resolves|Fixes): \#[0-9]+$'
#          error: 'You need at least one "Resolves|Fixes: #<issue number>" line.'
      - name : GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
#      - name: get commit message
#        run: |
#          echo ::set-env name=commitmsg::$(git log --format=%B -n 1 ${{ github.event.after }})
      - name: Checking out - (${{ matrix.os }})
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true
      - name: Submodules Sync - (${{ matrix.os }})
        shell: bash
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive --remote --merge --force --depth=3
      - name: GitHub credentials configuration - ${{ matrix.os }}
        shell: bash
        run: |
          git config user.name "${{ secrets.GH_USER }}"
#          git config user.email "${{ secrets.GH_USER_EMAIL }}"
#          git config credential.helper "store --file=.git/credentials"
#          echo "https://${{ secrets.GITHUB_TOKEN }}:@github.com" > .git/credentials
      - name: Docker Build Image - ${{ matrix.os }}
        env:
          GH_USER: ${{ secrets.GH_USER }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.GH_USER }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          which docker
#          ./mvnw -B -X -s $(pwd)/.mvn/settings.xml -DskipTests=false clean verify
