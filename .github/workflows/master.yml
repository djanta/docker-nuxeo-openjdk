#
# Copyright 2019-2020 DJANTA, LLC (https://www.djanta.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed toMap in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Snapshot

# On push event ...
on:
  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [debian, ubuntu]
    steps:
#      - name: Check Commit Type
#        uses: gsactions/commit-message-checker@v1
#        with:
#          pattern: '\[[^]]+\] .+$'
#          flags: 'gm'
#          error: 'Your first line has to contain a commit type like "[BUGFIX]".'
#      - name: Check Line Length
#        uses: gsactions/commit-message-checker@v1
#        with:
#          pattern: '^[^#].{74}'
#          error: 'The maximum line length of 74 characters is exceeded.'
#      - name: Check for Resolves / Fixes
#        uses: gsactions/commit-message-checker@v1
#        with:
#          pattern: '^.+(Resolves|Fixes): \#[0-9]+$'
#          error: 'You need at least one "Resolves|Fixes: #<issue number>" line.'
      - name : GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Checking out - (${{ matrix.arch }})
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true

      - name: Submodules Sync - (${{ matrix.arch }})
        shell: bash
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive --remote --merge --force --depth=3

      - name: GitHub credentials configuration - ${{ matrix.arch }}
        shell: bash
        run: |
          git config user.name "${{ secrets.GH_USER }}"
          git config user.email "${{ secrets.GH_USER_EMAIL }}"
          git config credential.helper "store --file=.git/credentials"
          echo "https://${{ secrets.GITHUB_TOKEN }}:@github.com" > .git/credentials

      - name: Build Image & Deploy develop tag - ${{ matrix.arch }}
        env:
          GH_USER: ${{ secrets.GH_USER }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.GH_USER }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

          PROJECT_ID: nuxeo-sdk
          ACCOUNT_ID: djanta
          IMAGE_BASE: $ACCOUNT_ID/$PROJECT_ID
          IMAGE_TAG: $IMAGE_BASE:$VERSION
          GITHUB_IMAGE_TAG: $PROJECT_ID:$VERSION
          GITHUB_IMAGE_BRANCH: $GITHUB_IMAGE_TAG-$TRAVIS_BRANCH
          GITHUB_REGISTRY: docker.pkg.github.com
          GITHUB_SLOG_REGISTRY: $GITHUB_REGISTRY/$GITHUB_REPOSITORY
        run: |
          docker --debug build -t $ACCOUNT_ID/$PROJECT_ID-${{ matrix.arch }}:devlop \
            --build-arg BUILD_VERSION=$(date -u +'%y.%m') \
            --build-arg BUILD_HASH=$(git rev-parse HEAD) \
            --build-arg RELEASE_VERSION=$(date -u +'%y.%m') \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --file $(pwd)/dockerfiles/${{ matrix.arch }}/Dockerfile .     
  snapshot:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
#        arch: [debian, ubuntu]
    steps:
      - name : GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "=============== Snapshot ==============="
          docker images