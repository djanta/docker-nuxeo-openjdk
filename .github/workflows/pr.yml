#
# Copyright 2019-2020 DJANTA, LLC (https://www.djanta.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed toMap in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Issue

# On push event ...
on:
  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
jobs:
  build:
#    runs-on: ${{ matrix.os }}
    runs-on: "ubuntu-latest"
    steps:
      - name: Checking out
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true

      - name: Submodules Sync
        shell: bash
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive --remote --merge --force --depth=3

      - name: GitHub credentials configuration - ${{ matrix.os }}
        shell: bash
        run: |
          git config user.name "${{ secrets.GH_USER }}"
#          git config user.email "${{ secrets.GH_USER_EMAIL }}"
#          git config credential.helper "store --file=.git/credentials"
#          echo "https://${{ secrets.GITHUB_TOKEN }}:@github.com" > .git/credentials

      - name: Update version
        id: version
        run: |
          echo "GITHUB_REF is a tag you set for the release"
          echo "Your GitHub ref: ${GITHUB_REF}"
          VERSION=`echo "${GITHUB_REF}" | cut -f 3 -d "/"`
          echo "Preparing version: ${VERSION}"
          echo "__version__ = \"${VERSION}\"" > __version__.py
          echo "##[set-output name=version;]$(echo ${VERSION})"

          if [[ steps.version.outputs.version != ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=rversion::$(date -u +'%y.%m')
              echo "==========================="
          fi

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[WIP] - PR after passing develop branch build test"
          committer: ${{ github.event.head_commit.committer.name }} <${{ github.event.head_commit.committer.email }}>
          author: ${{ github.event.pusher.name }} <${{ github.event.pusher.email }}>
          title: '[PR] from ${{ github.ref }} by (${{ github.event.head_commit.committer.name }}) - https://github.com/${{ github.event.head_commit.committer.username }}'
          body: |
            - ${{ github.event.head_commit.message }}
            - Auto-generated by [create-pull-request][1]
            [1]: https://github.com/$GITHUB_REPOSITORY/pull
          labels: pr
          assignees: stanislaska
          reviewers: stanislaska
          team-reviewers: owners, maintainers
#          milestone: 1
          draft: false
          branch: master
          request-to-parent: false

      - name: Create or Update Project Card
        uses: peter-evans/create-or-update-project-card@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          project-name: Cloud
          column-name: To do
          issue-number: ${{ steps.cpr.outputs.pull-request-number }}
