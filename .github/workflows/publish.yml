#
# Copyright 2019-2020 DJANTA, LLC (https://www.djanta.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed toMap in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Publish

on:
  create:
    tags:
#      - /^((rc|v|version|release|tag)(-)?)?([0-9\.]+)((-)?(patch|beta|alpha))?$/
      - 'v*.*.*'
      - 'release*.*.*'
      - 'tag*.*.*'
    branches:
      - 'refs/tags/*'
      - '!refs/heads/*'
jobs:
  publish:
    if: (${{ github.event.ref }} =~ ^((rc|v|version|release|tag)(-)?)?([0-9\.]+)((-)?(patch|beta|alpha))?$ ]])
    runs-on: ubuntu-latest
    strategy:
      matrix:
 #       os: [ubuntu-latest]
 #       registry: [/*gcr.io*/ /*,docker.pkg.github.com*/]
      registry: []
    steps:
#      - name : GITHUB CONTEXT
#        env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#        run: echo "$GITHUB_CONTEXT"

      - name: Create or Update version ID
        id: version
        run: |
          echo "GITHUB_REF is a tag you set for the release"
          echo "Your GitHub ref: ${GITHUB_REF}"
          VERSION=`echo "${GITHUB_REF}" | cut -f 3 -d "/"`

#          echo "Preparing version: ${VERSION}"
#          echo "__version__ = \"${VERSION}\"" > __version__.py
#          echo "##[set-output name=version;]$(echo ${VERSION})"

          echo ::set-env name=version::${VERSION})
          if [[ steps.version.outputs.version != ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=version::$(date -u +'%y.%m')
          fi
