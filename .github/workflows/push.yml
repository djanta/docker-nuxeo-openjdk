#
# Copyright 2019-2022 DJANTA, LLC (https://www.djanta.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed toMap in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Build & Push

on:
  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true

      - name: Submodules Sync
        shell: bash
        run: |
          git submodule sync --recursive
          git submodule update --recursive --remote --merge --force --depth=3

      - name: GitHub credentials configuration
        shell: bash
        run: |
          git config user.name "${{ secrets.GH_USER }}"
          git config user.email "${{ secrets.GH_USER_EMAIL }}"
          git config credential.helper "store --file=.git/credentials"
          echo "https://${{ secrets.GITHUB_TOKEN }}:@github.com" > .git/credentials

#      - name: Docker login
#        shell: bash
#        env:
#          DOCKER_REGISTRY: docker.io
#        run: |
#          echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin ${DOCKER_REGISTRY}
##          docker login ${DOCKER_REGISTRY} --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        id: login
        with:
#          registry:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache local Docker images
        uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: ${{ runner.os }}-docker-${{ hashFiles('**/*/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build Image & Deploy
        env:
          GITHUB_USERNAME: ${{ secrets.GH_USER }}
          GH_USER: ${{ secrets.GH_USER }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          JDK_VARIANT: jdk
        run: |
          echo ""
#          ./build.sh --push
