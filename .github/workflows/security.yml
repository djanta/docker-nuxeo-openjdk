#
# Copyright 2019-2020 DJANTA, LLC (https://www.djanta.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed toMap in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Security

on:
#  schedule:
#    #DOC: https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule
#    #Run everyday at 23:00 of every week
#    - cron: '0 23 * * 6'

  push:
    branches:
      - devxxxxxxelop

jobs:
  scan:
    name: Daily Vulnerability Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [debian, ubuntu]
        version: [20.06]
    steps:

      -
        name: Checking out
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: true
      -
        name: Pull docker image
        run: docker pull djanta/nuxeo-sdk-${{ matrix.arch }}:${{ matrix.version }}

      -
        name: Run Gitrivy Vulnerability check
        uses: homoluctus/gitrivy@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          image: djanta/nuxeo-sdk-${{ matrix.arch }}:develop
          trivy_version: true
          issue_label: test,report,vulnerability

#      - name: Run Anchore Vulnerability check
#        uses: anchore/scan-action@master
#        with:
#          image-reference: djanta/nuxeo-sdk-${{ matrix.arch }}:${{ matrix.version }}
##          dockerfile-path: "./Dockerfile"
#          fail-build: true
#      - name: Anchore inline scan JSON results
#        run: for j in `ls ./anchore-reports/*.json`; do echo "---- ${j} ----"; cat ${j}; echo; done

#      - name: Inspect image
##        if: always() && github.event_name != 'pull_request'
#        if: always()
#        run: |
#          if [ -n ${{ steps.image.outputs.image_id_cache }} ]; then \
#            for image in ${{ steps.image.outputs.image_id_cache }}[@]; do \
#              docker buildx imagetools inspect "$image" \
#            done; \
#          fi

#      - name: 'Run Docker test'
#        shell: bash
#        env:
#          IMAGE: djanta/nuxeo-sdk-${{ matrix.arch }}:latest
#        run: |
#          git clone https://github.com/docker-library/official-images.git ~/official-images
#          ~/official-images/test/run.sh $IMAGE

#      - name: Snyk vulnerabilities check
#        uses: snyk/actions/docker@master
#        fail-fast: false
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        with:
#          image: djanta/nuxeo-sdk-${{ matrix.arch }}:develop
#          args: --severity-threshold=high --file=dockerfiles/${{ matrix.arch }}/.vulnerability

#      - name: Run Gitrivy Vulnerability check
#        uses: homoluctus/gitrivy@v2.0.0
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          image: djanta/nuxeo-sdk-${{ matrix.arch }}:develop
#          trivy_version: true
#          issue_label: test,report,vulnerability
